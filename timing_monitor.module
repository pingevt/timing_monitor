<?php

/**
 * @file
 * Api logging module.
 */

function timing_monitor_get_type():array {
  $connection = \Drupal::database();

  $query = $connection->select('timing_monitor_log', 'l');
  $query->fields('l', ['type']);
  $query->groupBy('type');

  $r = $query->execute()->fetchAll();

  $return = [];
  foreach($r as $r2) {
    $return[$r2->type] = $r2->type;
  }

  return $return;
}

/**
 * Implements hook_cron().
 *
 * Controls the size of the api log table, paring it to 'api_logger_row_limit' messages.
 */
function timing_monitor_cron() {
  // Cleanup the watchdog table.
  $row_limit = \Drupal::config('timing_monitor.settings')->get('row_limit');

  // For row limit n, get the wid of the nth row in descending wid order.
  // Counting the most recent n rows avoids issues with wid number sequences,
  // e.g. auto_increment value > 1 or rows deleted directly from the table.
  if ($row_limit > 0) {
    // $connection = \Drupal::database();
    // $min_row = $connection->select('timing_monitor_log', 'l')
    //   ->fields('l', ['id'])
    //   ->orderBy('id', 'DESC')
    //   ->range($row_limit - 1, 1)
    //   ->execute()->fetchField();

    // Delete all table entries older than the nth row, if nth row was found.
    // if ($min_row) {
    //   $connection->delete('timing_monitor_log')
    //     ->condition('id', $min_row, '<')
    //     ->execute();
    // }
  }
}
